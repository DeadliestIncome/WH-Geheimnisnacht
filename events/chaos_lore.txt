namespace = chaos_lore
# Battle spells for all chaos lores:
# tzzentch
# nurgle
# slaanesh
# chaos undivided

# Chaos undivided spell selection (random)
character_event = {
	id = chaos_lore.0
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		calc_magic_power_effect = yes 
		battle_magic_test_effect = yes
		target_enemy_unit_owner_effect = yes
		# Select spell composition
		while = {
			limit = {
				check_variable = { which = "battle_casting_roll" value = 6.5 }
			}
			# Veil of corruption 24 magic points cost, otherwise
			# cast average damage spell (burning blood) without
			random_list = {
				25 = {
					modifier = {
						factor = 0
						NOT = { trait = lore_chaos }
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = {
								which =	"battle_casting_roll"
								value = 6.5
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -6.5
					}
					change_variable = {
						which = "magic_dmg_flat" 
						value = 1
					}
					set_character_flag = cast_signature_chaos
				}
				30 = {
					modifier = {
						factor = 0
						has_character_flag = cast_veil_of_corruption
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = { 
								which = "battle_casting_roll" 
								value =	24
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -24
					}
					change_variable = {
						which = "magic_dmg_flat" 
						value = 2
					}
					change_variable = {
						which = "magic_morale_dmg"
						value = 2
					}
					set_character_flag = cast_veil_of_corruption
				}
				# Word of Pain (costs 27) S8 1d10 dmg no
				# half scalling
				25 = {
					modifier = {
						factor = 0
						has_character_flag = cast_word_of_pain
					}
					modifier = {
						factor = 0
						NOT = { trait = lore_chaos }
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = { 
								which = "battle_casting_roll" 
								value =	13.5
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -13.5
					}
					# TODO change it to affect weak units
					# more 
					change_variable = { which = "magic_dmg_flat" value = 1 }
					change_variable = { which = "magic_dmg_percent" value = 1 }
					set_character_flag = cast_word_of_pain
				}
				# Summon daemon horde (shared across all)
				25 = {
					modifier = {
						factor = 0
						NOT = { 
							check_variable = { 
								which = "battle_casting_roll" 
								value =	12.5
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -12.5
					}
					change_variable = { 
						which =	"magic_summon_daemons" 
						value = 1
					}
					set_character_flag = cast_summon_daemons
				}
				# God specific spells
				# Tzeentch's Fire Storm
				25 = {
					modifier = {
						factor = 0
						NOT = { trait = lore_tzeentch }
					}
					modifier = {
						factor = 0
						has_character_flag = cast_tzeentchs_firestorm
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = { 
								which = "battle_casting_roll" 
								value =	25
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -25
					}
					# TODO change it to affect weak units
					# more 
					change_variable = { which = "magic_dmg_flat" value = 2 }
					change_variable = { which = "magic_dmg_percent" value = 1 }
					change_variable = { 
						which = "magic_summon_daemons" 
						value = 1 
					}
					set_character_flag = cast_tzeentchs_firestorm
				}
				50 = {
					modifier = {
						factor = 0
						NOT = { trait = lore_tzeentch }
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = {
								which =	"battle_casting_roll"
								value = 6.5
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -6.5
					}
					change_variable = {
						which = "magic_dmg_flat" 
						value = 1
					}
					set_character_flag = cast_signature_tzeentch
				}
				25 = {
					modifier = {
						factor = 0
						NOT = { trait = lore_nurgle }
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = {
								which =	"battle_casting_roll"
								value = 9
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
							value = -9
					}
					change_variable = {
						which = "magic_dmg_flat" 
						value = 1
					}
					change_variable = {
						which = "magic_morale_dmg" 
						value = 1
					}
					set_character_flag = cast_signature_nurgle
				}
				50 = {
					modifier = {
						factor = 0
						NOT = { trait = lore_nurgle }
					}
					modifier = {
						factor = 0
						has_character_flag = cast_plague_wind
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = { 
								which = "battle_casting_roll" 
								value =	29
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -29
					}
					# Add negative modifier toward enemy
					change_variable = { which = "magic_morale_dmg" value = 3 }
					set_character_flag = cast_plague_wind
				}
				# Slaanesh spells
				# Pavane of slaanesh
				50 = {
					modifier = {
						factor = 0
						NOT = { trait = lore_slaanesh }
					}
					modifier = {
						factor = 0
						event_target:magic_target_unit_owner = {
							any_controlled_unit = {
								location = { province = event_target:magic_location }
								center_flank_leader = {	combat = { flank_has_tactic = pavane_of_slaanesh_tactic	}}
								right_flank_leader = { combat = { flank_has_tactic = pavane_of_slaanesh_tactic }}
								left_flank_leader = { combat = { flank_has_tactic = pavane_of_slaanesh_tactic }}
							}
						}
					}
					modifier = {
						factor = 0
						has_character_flag = cast_pavane_of_slaanesh
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = { 
								which = "battle_casting_roll" 
								value =	18
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -18
					}
					set_character_flag = cast_pavane_of_slaanesh
				}
				50 = {
					modifier = {
						factor = 0
						NOT = { trait = lore_slaanesh }
					}
					modifier = {
						factor = 0
						NOT = { 
							check_variable = {
								which =	"battle_casting_roll"
								value = 9
							}
						}
					}
					change_variable = { 
						which = "battle_casting_roll" 
						value = -9
					}
					change_variable = {
						which = "magic_dmg_flat" 
						value = 1
					}
					change_variable = {
						which = "magic_morale_heal"
						value = 1
					}
					set_character_flag = cast_signature_slaanesh
				}
			}
		}
		# Trigger reporting event or clear
		if = {
			limit = {
				OR = {
					has_character_flag = cast_veil_of_corruption
					has_character_flag = cast_word_of_pain
					#@TODO make it silent sometimes
					has_character_flag = cast_signature_chaos
					has_character_flag = cast_summon_daemons
					# Tzeentch
					has_character_flag = cast_signature_tzeentch
					has_character_flag = cast_tzeentchs_firestorm
					# Nurgle
					has_character_flag = cast_signature_nurgle
					has_character_flag = cast_plague_wind
					# Slaanesh
					has_character_flag = cast_signature_slaanesh
					has_character_flag = cast_pavane_of_slaanesh
				}
			}
			character_event = { id = chaos_lore.1 }
		}
		else = {
			clr_magic_state = yes
			clr_spell_flags_effect = yes
		}
	}
}

# Chaos undivided lore
character_event = {
	id = chaos_lore.1
	title = chaos_cast_title
	border = GFX_event_normal_frame_war

	desc = {
		# Generic damage: Burning blood
		trigger = { has_character_flag = cast_signature_chaos }
		text = chaos_lore.1A_desc
		picture = GFX_evt_chaos_magic
	}
	# Shared: Summon Daemon Pack event picture is valid for respective god
	desc = {
		trigger = { 
			AND = {
				has_character_flag = cast_summon_daemons 
				trait = lore_chaos
			}
		}
		text = chaos_lore.1D_desc
		picture = GFX_evt_khorne_daemons
	}
	desc = {
		trigger = {
			AND = {
				has_character_flag = cast_summon_daemons 
				trait = lore_tzeentch
			}
		}
		text = chaos_lore.1D_desc
		picture = GFX_evt_tzeentch_chaos_spawn
	}
	desc = {
		trigger = {
			AND = {
				has_character_flag = cast_summon_daemons 
				trait = lore_slaanesh
			}
		}
		text = chaos_lore.1D_desc
		picture = GFX_evt_slaanesh_demons
	}
	desc = {
		trigger = { 
			AND = { 
				has_character_flag = cast_summon_daemons 
				trait = lore_nurgle
			}
		}
		text = chaos_lore.1D_desc
		picture = GFX_evt_nurgle_horde
	}
	desc = {
		# Chaos Lore: Word of Pain
		trigger = { has_character_flag = cast_word_of_pain }
		text = chaos_lore.1C_desc
		picture = GFX_evt_chaos_magic
	}
	desc = {
		# Chaos Lore: Veil of corruption
		trigger = { has_character_flag = cast_veil_of_corruption }
		text = chaos_lore.1B_desc
		picture = GFX_evt_chaos_magic
	}
	# Tzeentch lore: Tzeentch's Firestorm
	desc = {
		trigger = { has_character_flag = cast_signature_tzeentch }
		text = chaos_lore.1E_desc
		picture = GFX_evt_mage_lore_tzeentch
	}
	desc = {
		trigger = { has_character_flag = cast_tzeentchs_firestorm }
		text = chaos_lore.1F_desc
		picture = GFX_evt_mage_lore_tzeentch
	}
	# Nurgle's Lore
	desc = {
		trigger = { has_character_flag = cast_streams_of_corruption }
		text = chaos_lore.1G_desc
		picture = GFX_evt_mage_lore_nurgle
	}
	desc = {
		trigger = { has_character_flag = cast_plague_wind }
		text = chaos_lore.1H_desc
		picture = GFX_evt_nurgle_gift
	}
	# Slaanesh
	desc = {
		trigger = { has_character_flag = cast_signature_slaanesh }
		text = chaos_lore.1I_desc
		picture = GFX_evt_mage_lore_slaanesh
	}
	desc = {
		trigger = { has_character_flag = cast_pavane_of_slaanesh }
		text = chaos_lore.1J_desc
		picture = GFX_evt_mage_lore_slaanesh
	}
	is_triggered_only = yes
	picture = GFX_evt_chaos_magic

	immediate = {
		location = { save_event_target_as = magic_location }
		event_target:magic_target_unit_owner = { 
			target_random_commander_effect = yes 
		}
	}
	option = {
		name = chaos_cast_desc
		# Own army
		random_controlled_unit = {
			limit = { location = { province = event_target:magic_location }}
			magic_morale_heal_effect = yes 
		}
		if = {  
			limit = { has_character_flag = cast_summon_daemons}
			magic_summon_daemons_effect = yes 
			# Disband after 3 days
			hidden_tooltip = {
				event_target:magic_caster = {
					character_event = { 
						id = chaos_lore.500
						days = 4
					}
				}
				# Report
				event_target:magic_target_character = {
					character_event = { 
						id = chaos_lore.5
						days = 1
					}
				}
			}
		}
		# Per unit effects
		event_target:magic_target_unit_owner = {
			random_controlled_unit = {
				limit = { location = { province = event_target:magic_location }}
				# Army dmg effect (percent dmg)
				magic_morale_dmg_effect = yes 
				magic_dmg_flat_effect = yes 
				magic_dmg_percent_effect = yes 
			}
		}
		# Character effects
		trigger_switch = {
			on_trigger = has_character_flag 
			cast_veil_of_corruption = {
				event_target:magic_target_character = {
					custom_tooltip = {
						text = chaos_lore.1_tooltip
						hidden_tooltip = { 
							character_event = { id = chaos_lore.2 }
						}
					}
				}
			}
			cast_tzeentchs_firestorm = {
				magic_summon_daemons_effect = yes 
				hidden_tooltip = {
					event_target:magic_target_character = {
						character_event = { 
							id = chaos_lore.5
							days = 4
						}
						character_event = { id = chaos_lore.4 }
					}
				}
			}
			cast_streams_of_corruption = {
				hidden_tooltip = {
					event_target:magic_target_character = {
						character_event = { id = chaos_lore.6 }
					}
				}
			}
			cast_plague_wind = {
				hidden_tooltip = {
					event_target:magic_target_character = {
						character_event = { id = chaos_lore.7 }
					}
				}
			}
			cast_pavane_of_slaanesh = {
				magic_pavane_of_slaanesh_effect = yes
				hidden_tooltip = {
					event_target:magic_target_character = {
						character_event = { id = chaos_lore.9 }
					}
				}
			}
		}
	}
	after = {
		hidden_tooltip = {
			clr_magic_state = yes
			clr_spell_flags_effect = yes
		}
	}
}
# Veil of corruption extra effect on the victim
character_event = {
	id = chaos_lore.2
	title = chaos_lore.2_title
	desc = chaos_lore.2_desc
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	picture = GFX_evt_mutation

	option = {
		name = chaos_lore.2_opt
		custom_tooltip = {
			text = chaos_lore.2_tooltip
			hidden_tooltip = {
				random_mutation_effect = yes
				FROM = { character_event = { id = chaos_lore.3 }}
			}
		}
	}
}

# Veil of corruption report:caster
character_event = {
	id = chaos_lore.3
	title = chaos_lore.3_title
	desc = chaos_lore.3_desc
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	picture = GFX_evt_mutation

	option = {
		name = chaos_lore.3_opt
		FROM = {
			custom_tooltip = { text = chaos_lore.3_tooltip }
		}
	}
}
# Tzeentch's Firestorm victim report
character_event = {
	id = chaos_lore.4
	title = chaos_lore.4_title
	desc = chaos_lore.4_desc
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	picture = GFX_evt_tzeentch

	option = {
		name = chaos_lore.4_opt
		morale = -0.05
	}
}
# Daemon summon report
character_event = {
	id = chaos_lore.5
	title = chaos_cast_title
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	picture = GFX_evt_khorne_daemons
	desc = {
		trigger = { FROM = { trait = lore_chaos }}
		text = chaos_lore.5_desc
		picture = GFX_evt_khorne_daemons
	}
	desc = {
		trigger = { FROM = { trait = lore_tzeentch }}
		text = chaos_lore.5_desc
		picture = GFX_evt_tzeentch_chaos_spawn
	}
	desc = {
		trigger = { FROM = { trait = lore_slaanesh }}
		text = chaos_lore.5_desc
		picture = GFX_evt_slaanesh_demons
	}
	desc = {
		trigger = { FROM = { trait = lore_nurgle }}
		text = chaos_lore.5_desc
		picture = GFX_evt_nurgle_horde
	}

	option = {
		name = DAMN
		if = { 
			limit = { trait = creature_human }
			morale = -0.02
		}
	}
}
# Disband daemonic troops
character_event = {
	id = chaos_lore.500
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		disband_event_forces = summoned_daemons
		clr_character_flag = summoned_daemons
		any_unit = {
			leader = { disband_event_forces = summoned_daemons }
			center_flank_leader = { disband_event_forces = summoned_daemons }
			left_flank_leader = { disband_event_forces = summoned_daemons }
			right_flank_leader = { disband_event_forces = summoned_daemons }
		}
	}
}
# Inform enemy of plague wind effect
character_event = {
	id = chaos_lore.6
	title = chaos_lore.6_title
	desc = chaos_lore.6_desc
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	picture = GFX_evt_nurgle_gift

	option = {
		name = chaos_lore.6_opt
		# @TODO use tooltip to show effects
	}
}

# Plague wind after effect
character_event = {
	id = chaos_lore.7
	title = chaos_lore.7_title
	desc = chaos_lore.7_desc
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	picture = GFX_evt_nurgle_gift

	option = {
		name = chaos_lore.7_opt
		# @TODO use tooltip to show effects
		if = {
			limit = { 
				NOT = { is_disease_immune_race = yes }
			}
			add_trait = has_nurgles_rot
		}
		hidden_tooltip = {
			character_event = {
				id = chaos_lore.8
				days = 18
				random = 6
			}
		}
	}
}
# First casulties after nurgle's rot
character_event = {
	id = chaos_lore.8
	title = chaos_lore.8_title
	desc = chaos_lore.8_desc
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	picture = GFX_evt_nurgle_gift

	option = {
		name = chaos_lore.8_opta
		troops = -0.05
		morale = -0.1
	}
	option = { 
		name = chaos_lore.8_optb 
		random_list = {
			50 = { location = { spawn_disease = nurgles_rot }}
			50 = {}
		}
	}
	#option = {
	#	trigger = { religion_group = chaos_gods_group }
	#	name = chaos_lore.8_optc 
	#	# TODO
	#}
}

# Pavane of slaanesh enemy commander is informed
character_event = {
	id = chaos_lore.9
	title = chaos_lore.9_title
	desc = chaos_lore.9_desc
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	picture = GFX_evt_mage_lore_slaanesh

	option = {
		name = chaos_lore.9_opta
		morale = -0.03
	}
}

# DEBUGS
character_event = {
	id = chaos_lore.996
	is_triggered_only = yes
	desc = "Demon check and summon"
	picture = GFX_evt_mage_lore_slaanesh

	immediate = {
		set_variable = { which = "magic_summon_daemons" value = 1 }
		save_event_target_as  = magic_caster
		location = { save_event_target_as  = magic_location }
	}

	option = {
		name = "Summon effect"
		magic_summon_daemons_effect = yes
	}
	option = {
		name = "Damage"
		any_controlled_unit = {
			damage_unit = { amount = 10 type = daemonic_host }
		}
	}
	option = {
		name = "Check daemon"
		if = {
			limit = {
				any_controlled_unit = {
					AND = { 
						troops = { 
							who = daemonic_host
							value = 0.002 
						}
						location = { 
							province = event_target:magic_location 
						}
					}
				}
			}
			set_character_flag = daemons_002
		}
	}

	option = {
		name = "Clr flag"
		clr_character_flag = summoned_daemons
	}
}
# DEBUG EVENTS
character_event = {
	id = chaos_lore.997
	title = chaos_cast_title
	border = GFX_event_normal_frame_war
	desc = chaos_lore.10_desc
	is_triggered_only = yes
	picture = GFX_evt_chaos_magic

	immediate = {
		location = { save_event_target_as = loc }
		clr_character_flag = has_heavy_10
		clr_character_flag = has_heavy_20
		clr_character_flag = has_light_15
		clr_character_flag = has_light_30
		clr_character_flag = has_archers
		clr_character_flag = has_pikemen
	}
	option = {
		name = chaos_cast_desc
		#miscast_apply_effect = yes
		# Word of Pain
		any_controlled_unit = {
			limit = { location = { province = event_target:loc }}
			# Army dmg effect (percent dmg)
			if = {
				limit = {
					troops = { who = heavy_troops value = 0.1 }
				}
				ROOT = { set_character_flag = has_heavy_10 }
			}
			if = {
				limit = {
					troops = { who = heavy_troops value = 0.2 }
				}
				ROOT = { set_character_flag = has_heavy_20 }
			}
			if = {
				limit = {
					troops = { who = light_troops value = 0.15 }
				}
				ROOT = { set_character_flag = has_light_15 }
			}
			if = {
				limit = {
					troops = { who = light_troops value = 0.30 }
				}
				ROOT = { set_character_flag = has_light_30 }
			}
			if = {
				limit = {
					troops = { who = archers value = 0.1 }
				}
				ROOT = { set_character_flag = has_archers_10 }
			}
			if = {
				limit = {
					troops = { who = pikemen value = 0.001 }
				}
				ROOT = { set_character_flag = has_pikeman }
			}
			if = {
				limit = {
					troops = { who = pikemen value = 0.1 }
				}
				ROOT = { set_character_flag = has_pikeman_10 }
			}
			damage_unit = { type = special_units amount = 100 }
		}
	}
	option = {
		name = "GUNPOWDER"
		# Word of Pain
		random_controlled_unit = {
			limit = {
				location = { province = event_target:loc }
				troops = { who = gunpowder value = 0.05 }
			}
			damage_unit = { type = gunpowder amount = 100 }
		}
	}
	option = {
		name = "GUNPOWDERWRONG"
		# Word of Pain
		random_controlled_unit = {
			limit = {
				location = { province = event_target:loc }
				troops = { who = gunpowder value = 0.05 }
			}
		}
	}
	option = {
		name = "CHEK COMP"
		# Word of Pain
		if = {
			any_controlled_unit = {
				limit = {
					troops = { who = gunpowder value = 0.001 }
				}
			}
			set_character_flag = has_gunpowder
		}
		if = {
			any_controlled_unit = {
				limit = {
					troops = { who = gunpowder value = 0.01 }
				}
			}
			set_character_flag = has_gunpowder_lots
		}
		if = {
			any_controlled_unit = {
				limit = {
					troops = { who = daemonic_host value = 0.001 }
				}
			}
			set_character_flag = has_daemons
		}
	}
}
character_event = {
	id = chaos_lore.998
	title = chaos_cast_title
	border = GFX_event_normal_frame_war
	desc = chaos_lore.10_desc
	is_triggered_only = yes
	picture = GFX_evt_chaos_magic

	immediate = {
		location = { save_event_target_as = loc }
		clr_character_flag = has_heavy_10
		clr_character_flag = has_heavy_20
		clr_character_flag = has_light_15
		clr_character_flag = has_light_30
		clr_character_flag = has_archers
		clr_character_flag = has_pikemen
	}
	option = {
		name = chaos_cast_desc
		#miscast_apply_effect = yes
		# Word of Pain
		any_controlled_unit = {
			limit = { location = { province = event_target:loc }}
			# Army dmg effect (percent dmg)
			if = {
				limit = {
					troops = { who = heavy_troops value = 0.1 }
				}
				ROOT = { set_character_flag = has_heavy_10 }
			}
			if = {
				limit = {
					troops = { who = heavy_troops value = 0.2 }
				}
				ROOT = { set_character_flag = has_heavy_20 }
			}
			if = {
				limit = {
					troops = { who = light_troops value = 0.15 }
				}
				ROOT = { set_character_flag = has_light_15 }
			}
			if = {
				limit = {
					troops = { who = light_troops value = 0.30 }
				}
				ROOT = { set_character_flag = has_light_30 }
			}
			if = {
				limit = {
					troops = { who = archers value = 0.1 }
				}
				ROOT = { set_character_flag = has_archers_10 }
			}
			if = {
				limit = {
					troops = { who = pikemen value = 0.001 }
				}
				ROOT = { set_character_flag = has_pikeman }
			}
			if = {
				limit = {
					troops = { who = pikemen value = 0.1 }
				}
				ROOT = { set_character_flag = has_pikeman_10 }
			}
			damage_unit = { type = gunpowder amount = 1.0 }
		}
	}
}
