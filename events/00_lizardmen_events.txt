### Lizardmen events. Created by Careful Plum

namespace = lizardman

## 1-100: Events about spawning new lizardmen

##Spawn a new generation of lizardman - triggered by decade pulse

#DISABLED - There can always be more courtiers, Open Elective does not require dynastic heirs - DISABLED
#character_event = { #Once-a-decade chance to produce more lizardman
#	id = lizardman.5
#	desc = lizardman5desc
#
#	hide_window = yes #Only show an event if any lizardmen are actually spawned (lizardman.0)
#
#	is_triggered_only = yes
#	only_rulers = yes
#
#	trigger = {
#		culture_group = lizardman_group
#		is_ruler = yes
#		primary_title = { higher_tier_than = BARON }
#		NOT = { has_character_flag = spawnedlizardman }
#		NOT = {
#			any_courtier = {
#				count = 15
#			}
#		}
#	}
#
#	option = {
#		name = OK
#		if = { # If we spawned lizardmen last time, we won't do it now, but we will do it the next time the event fires (maybe too rare, because the skinks are actually mortal...)
#			limit = { has_character_flag = spawnedlizardman }
#			clr_character_flag = spawnedlizardman
#		}
#		if = {
#			limit = { NOT = { has_character_flag = spawnedlizardman } }
#			random = {
#				chance = 30
#				set_character_flag = spawnedlizardman
#				ROOT = { character_event = { id = lizardman.0 } } #Spawn the spawning pool
#			}
#		}
#	}
#}

#character_event = {
#	id = lizardman.0 #A new generation of lizardman crawls from the spawn pools
#	desc = lizardman0desc
#
#	only_rulers = yes
#
#	trigger = {
#		culture_group = lizardman_group
#		is_ruler = yes
#		primary_title = { higher_tier_than = BARON }
#	}
#
#	is_triggered_only = yes
#
#	option = {
#		name = OK
#
#		create_character = {
#			random_traits = no
##			name = "Spawn Pool"
#			female = no
#			age = 0
#			dynasty = ROOT
#			religion = ROOT
#		}
#		new_character = {
#			set_father = ROOT
#			dynasty = ROOT
#			character_event = {	id = lizardman.1 }
#		}
#	}
#}

#character_event = { #The pool creates the new lizardman
#	id = lizardman.1
#	desc = lizardman1desc
#
#	is_triggered_only = yes
#
#	option = {
#		name = OK
#			random = {
#				chance = 50
#				create_character = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_skink
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			random = {
#				chance = 50
#				create_character = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_skink
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			random = {
#				chance = 50
#				create_character = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_skink
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			random = {
#				chance = 50
#				create_character = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_skink
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			random = {
#				chance = 50
#				create_character = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_skink
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			random = {
#				chance = 50
#				create_character = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_skink
#				}
#				new_character = {
##					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			random = {
#				chance = 50
#				create_character = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_skink
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			random = {
#				chance = 50
#				create_character = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_skink
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#
#			random = {
#				chance = 50
#				create_random_soldier = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
##					age = 16
#					trait = creature_saurus
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			random = {
#				chance = 50
#				create_random_soldier = {
#					random_traits = yes
#					dynasty = ROOT
#					religion = ROOT
#					culture = lizardman
#					female = no
#					age = 16
#					trait = creature_saurus
#				}
#				new_character = {
#					set_father = ROOT
#					dynasty = ROOT
#					character_event = { id = lizardman.3 }
#				}
#			}
#			death = { death_reason = death_execution }
#		recalc_succession = yes
#	}
#}

#character_event = { #ping the new lizardman
##	id = lizardman.3
#	desc = lizardman3desc
#
#	is_triggered_only = yes
#
#	option = {
#		name = OK
#		host = { character_event = { id = lizardman.4 } }
#	}
#}
#
#character_event = { #tell the ruler about the new lizardman
#	id = lizardman.4
#	desc = lizardman4desc
#
#	is_triggered_only = yes
#
#	option = {
#		name = OK
#		recalc_succession = yes
#	}
#}

#lizardman.5 is at the top

# 101-200: Events related to Slann being awake or sleeping

#lizardman.101: Get negative traits for not being contemplating enough, or remove them for being in deep slumber
character_event = {
	id = lizardman.101
	desc = lizardman101desc
	picture = "GFX_evt_lustria_slann"

	hide_window = yes

	is_triggered_only = yes #Triggered by bi-yearly pulse

	only_rulers = yes #Maybe remove, depending on how we handle sleeping non-ruling Slann

	trigger = {
		is_ruler = yes
		trait = creature_slann
	}

	option = {
		name = OK
		random_list = {
			50 = { #Bad event
				modifier = {
					factor = 0
					NOT = { trait = lizardman_sleepingslann }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 100 }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 200 }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 300 }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 400 }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 500 }
				}
				character_event = { id = lizardman.102 }
			}
			50 = { #Good event
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 100 } }
				}
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 200 } }
				}
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 300 } }
				}
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 400 } }
				}
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 500 } }
				}
				character_event = { id = lizardman.103 }
			}
		}
	}
}

#lizardman.102: Bad event happens because of light sleep
character_event = {
	id = lizardman.102
	desc = lizardman102desc
	picture = "GFX_evt_lustria_slann"


	is_triggered_only = yes

	only_rulers = yes #Maybe remove, depending on how we handle sleeping non-ruling Slann

	trigger = {
		is_ruler = yes
		trait = creature_slann
		# trait = lizardman_sleepingslann
		}

	option = {
		name = lizardman102optA
		random_list = {
			10 = {
				modifier = {
					factor = 2
					NOT = { trait = stressed }
				}
				modifier = {
					factor = 2
					NOT = { trait = depressed }
				}
				modifier = {
					factor = 2
					NOT = { trait = lunatic_3 }
				}
				modifier = {
					factor = 0
					trait = lunatic_3
				}


				if = {
					limit = { trait = stressed
						 trait = depressed
						NOT = { trait = lunatic_3 } }
					change_variable = { which = "lunatic_counter" value = 5 }
					hidden_tooltip = { character_event = { id = mutation.1005 } } #lunacy
				}
				if = {
					limit = { trait = stressed
							NOT = { trait = depressed }
							NOT = { trait = lunatic_3 } }
					add_trait = depressed
				}
				if = {
					limit = { NOT = { trait = stressed }
						NOT = { trait = depressed }
						NOT = { trait = lunatic_3 } }
					add_trait = stressed
				}
			}
			10 = {
				modifier = {
					factor = 0
					is_ill = yes
				}
				
				if = {
					limit = {
						NOT = {
							has_dlc = "Reapers"
						}
					}
					add_trait = ill
				}
				if = {
					limit = {
						has_dlc = "Reapers"
					}
					add_symptom_effect = yes
				}
				
			}
			10 = {
				modifier = {
					factor = 0
					trait = slothful
				}
				add_trait = slothful
			}
			10 = {
				modifier = {
					factor = 0
					NOT = { trait = patient }
				}
				remove_trait = patient
			}
			10 = {
				modifier = {
					factor = 0
					NOT = { trait = diligent }
				}
				remove_trait = diligent
			}
			10 = {
				piety = -50
				prestige = -50
			}
		}
	}
}

#lizardman.103: Good event happens because of deep sleep
character_event = {
	id = lizardman.103
	desc = lizardman103desc
	picture = "GFX_evt_lustria_slann"

	is_triggered_only = yes

	only_rulers = yes #Maybe remove, depending on how we handle sleeping non-ruling Slann

	trigger = {
		is_ruler = yes
		trait = creature_slann
		trait = lizardman_sleepingslann
	}

	option = {
		name = lizardman103optA
		random_list = {
		10 = {
			modifier = {
				factor = 2
				trait = stressed
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			modifier = {
				factor = 2
				trait = lunatic_3
			}
			modifier = {
				factor = 0
				NOT = { trait = stressed }
				NOT = { trait = depressed }
				NOT = { trait = lunatic_3 }
			}
			if = {
				limit = { trait = stressed
					NOT = { trait = depressed }
					NOT = { trait = lunatic_3 } }
				remove_trait = stressed
			}
			if = {
				limit = { trait = stressed
					trait = depressed
					NOT = { trait = depressed } }
				remove_trait = depressed
			}
			if = {
				limit = { trait = stressed
					trait = depressed
					trait = lunatic_3 }
				change_variable = { which = "lunatic_counter" value = -5 }
			}
		}
		10 = {
			modifier = {
				factor = 0
				NOT = { trait = ill }
			}
			remove_trait = ill
		}
		10 = {
			modifier = {
				factor = 0
				NOT = { trait = slothful }
			}
			remove_trait = slothful
		}
		10 = {
			modifier = {
				factor = 0
				trait = patient
			}
			add_trait = patient
		}
		10 = {
			modifier = {
				factor = 0
				trait = diligent
			}
			add_trait = diligent
		}
		10 = {
			piety = 50
			prestige = 50
			}
		}
	}
}

#104: Remove recent_sleep_change flag

character_event = {
	id = lizardman.104
	desc = lizardman104desc
	picture = "GFX_evt_lustria_slann"

	only_rulers = yes

	hide_window = yes

	is_triggered_only = yes #2year pulse

	trigger = {
		had_character_flag = { flag = recent_sleep_change months = 18 }
	}

	option = {
		name = OK
		clr_character_flag = recent_sleep_change
	}
}

# 201-300: Events dealing with the Lustrian jungle

#201: The Lustrian jungle is growing

province_event = {
	id = lizardman.201
	desc = lizardman201desc
	picture = "GFX_evt_lustria_jungle"

	mean_time_to_happen = {
		years = 5
		modifier = {
			factor = 3
			OR = { 		#Jungle grows slower for natives
				culture_group = lizardman_group
				culture_group = amazon_group
				culture_group = halfling_lustrian
			}
		}
		modifier = { #Jungle grows slower next to rivers and coast (inland should be wilder and less useful)
			factor = 2
			OR = { borders_major_river = yes
				port = yes }
		}
		modifier = {
			factor = 1.5
			any_neighbor_province = { OR = { borders_major_river = yes
								port = yes } }
		}
		modifier = {
			factor = 1.5
			any_neighbor_province = { is_tribal = no
						is_nomadic = no }
		}
		modifier = {
			factor = 1.15
			holder_scope = { realm_stewardship = 10 }
		}
		modifier = {
			factor = 1.15
			holder_scope = { realm_stewardship = 15 }
		}
		modifier = {
			factor = 1.15
			holder_scope = { realm_stewardship = 20 }
		}
		modifier = {
			factor = 1.15
			holder_scope = { realm_stewardship = 25 }
		}
		modifier = {
			factor = 2
			is_tribal = no
			is_nomadic = no
		}
		modifier = {
			factor = 0.5
			is_nomadic = yes
		}
		modifier = {
			factor = 1.15
			capital_holding = { has_building = tb_hillfort_2 }
		}
		modifier = {
			factor = 1.2
			capital_holding = { has_building = tb_hillfort_3 }
		}
		modifier = {
			factor = 1.25
			capital_holding = { has_building = tb_hillfort_4 }
		}
		modifier = {
			factor = 1.15
			capital_holding = { has_building = ca_keep_2 }
		}
		modifier = {
			factor = 1.2
			capital_holding = { has_building = ca_keep_3 }
		}
		modifier = {
			factor = 1.25
			capital_holding = { has_building = ca_keep_4 }
		}
		modifier = {
			factor = 1.3
			capital_holding = { has_building = ca_keep_5 }
		}
		modifier = {
			factor = 1.35
			capital_holding = { has_building = ca_keep_6 }
		}
		modifier = { #Jungle grows faster if more controlled
			factor = 0.9
			holder_scope = { ai = no }
			has_province_modifier = lustria_light_jungle
		}
		modifier = { #Jungle grows a little slower once it's dense
			factor = 1.5
			holder_scope = { ai = no }
			has_province_modifier = lustria_dense_jungle
		}
	}

	trigger = {
		has_province_modifier = lustria_jungle
		OR = {
			NOT = { has_province_modifier = lustria_oppressive_jungle }
			holder_scope = {
				ai = yes #AI manages its jungle with this event
			}
		}
		terrain = jungle
	}

	option = {
		name = OK
		trigger = { holder_scope = { ai = no } }
		if = {
			limit = { has_province_modifier = lustria_dense_jungle }
			remove_province_modifier = lustria_dense_jungle
			add_province_modifier = { name = lustria_oppressive_jungle duration = -1 }
		}
		if = {
			limit = { has_province_modifier = lustria_medium_jungle }
			remove_province_modifier = lustria_medium_jungle
			add_province_modifier = { name = lustria_dense_jungle duration = -1 }
		}
		if = {
			limit = { has_province_modifier = lustria_light_jungle }
			remove_province_modifier = lustria_light_jungle
			add_province_modifier = { name = lustria_medium_jungle duration = -1 }
		}
		if = {
			limit = {
				NOR = { has_province_modifier = lustria_light_jungle
					has_province_modifier = lustria_medium_jungle
					has_province_modifier = lustria_dense_jungle
					has_province_modifier = lustria_oppressive_jungle }
				}
			add_province_modifier = { name = lustria_light_jungle duration = -1 }
			}
	}

	option = {
		name = OK
		trigger = { holder_scope = { ai = yes } }
		random_list = {
			50 = {
				modifier = {
					factor = 1.1
					holder_scope = { NOT = { realm_stewardship = 15 } }
					}
				if = {
					limit = { has_province_modifier = lustria_dense_jungle }
					remove_province_modifier = lustria_dense_jungle
					add_province_modifier = { name = lustria_oppressive_jungle duration = -1 }
				}
				if = {
					limit = { has_province_modifier = lustria_medium_jungle }
					remove_province_modifier = lustria_medium_jungle
					add_province_modifier = { name = lustria_dense_jungle duration = -1 }
				}
				if = {
					limit = { has_province_modifier = lustria_light_jungle }
					remove_province_modifier = lustria_light_jungle
					add_province_modifier = { name = lustria_medium_jungle duration = -1 }
				}
				if = {
					limit = {
						NOR = { has_province_modifier = lustria_light_jungle
								has_province_modifier = lustria_medium_jungle
								has_province_modifier = lustria_dense_jungle
								has_province_modifier = lustria_oppressive_jungle }
						}
					add_province_modifier = { name = lustria_light_jungle duration = -1 }
				}
			}
			50 = {
				modifier = {
					factor = 1.8
					holder_scope = { trait = creature_skink }
				}
				modifier = {
					factor = 1.2
					holder_scope = { trait = creature_amazon }
				}
				modifier = {
					factor = 1.2
					holder_scope = { culture_group = halfling_lustrian }
				}
				modifier = {
					factor = 2
					OR = { borders_major_river = yes
						port = yes }
				}
				modifier = {
					factor = 1.5
					any_neighbor_province = { OR = { borders_major_river = yes
										port = yes } }
				}
				modifier = {
					factor = 1.5
					any_neighbor_province = { is_tribal = no
								is_nomadic = no }
				}
				modifier = {
					factor = 1.15
					holder_scope = { realm_stewardship = 10 }
				}
				modifier = {
					factor = 1.15
					holder_scope = { realm_stewardship = 15 }
				}
				modifier = {
					factor = 1.15
					holder_scope = { realm_stewardship = 20 }
				}
				modifier = {
					factor = 1.15
					holder_scope = { realm_stewardship = 25 }
				}
				modifier = {
					factor = 1.15
					holder_scope = { independent = no
							top_liege = { realm_stewardship = 15 } }
				}
				modifier = {
					factor = 1.15
					holder_scope = { independent = no
							top_liege = { realm_stewardship = 20 } }
				}
				modifier = {
					factor = 1.15
					holder_scope = { independent = no
							top_liege = { realm_stewardship = 25 } }
				}
				modifier = {
					factor = 1.15
					holder_scope = { independent = no
							top_liege = { realm_stewardship = 30 } }
				}
				if = {
					limit = { has_province_modifier = lustria_medium_jungle }
					remove_province_modifier = lustria_medium_jungle
					add_province_modifier = { name = lustria_light_jungle duration = -1 }
				}
				if = {
					limit = { has_province_modifier = lustria_dense_jungle }
					remove_province_modifier = lustria_dense_jungle
					add_province_modifier = { name = lustria_medium_jungle duration = -1 }
				}
				if = {
					limit = { has_province_modifier = lustria_oppressive_jungle }
					remove_province_modifier = lustria_oppressive_jungle
					add_province_modifier = { name = lustria_dense_jungle duration = -1 }
				}
			}
		}
	}
}

#202: Get sick due to the jungle
character_event = {
	id = lizardman.202
	desc = lizardman202desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	trigger = { NOT = { culture_group = lizardman_group }
		location = { has_province_modifier = lustria_jungle }
		}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 1.5
			location = { has_province_modifier = lustria_medium_jungle }
		}
		modifier = {
			factor = 2
			location = { has_province_modifier = lustria_dense_jungle }
		}
		modifier = {
			factor = 3
			location = { has_province_modifier = lustria_oppressive_jungle }
		}
		modifier = {
			factor = 0.9
			health = 2
		}
		modifier = {
			factor = 0.9
			health = 3
		}
		modifier = {
			factor = 0.9
			health = 4
		}
		modifier = {
			factor = 0.9
			health = 5
		}
		modifier = {
			factor = 0.9
			health = 6
		}
		modifier = {
			factor = 0.9
			health = 7
		}
		modifier = {
			factor = 0.9
			health = 8
		}
		modifier = {
			factor = 0.9
			health = 9
		}
		modifier = {
			factor = 0.9
			health = 10
		}
		modifier = {
			factor = 3
			trait = ill
		}
		modifier = {
			factor = 5
			OR = {
				ROOT = { trait = has_measles }
				ROOT = { trait = has_typhus }
				ROOT = { trait = has_tomb_rot }
				ROOT = { trait = has_bone_auge }
				ROOT = { trait = pneumonic }
				ROOT = { trait = leper }
				ROOT = { trait = syphilitic }
				ROOT = { trait = pneumonic }
				}
			}
		modifier = {
			factor = 0.5
			OR = { trait = creature_skink
				trait = creature_saurus }
		}
		modifier = {
			factor = 0.1
			trait = creature_slann
			}
	}

	option = {
		name = OK
		
		
				if = {
					limit = {
						NOT = {
							has_dlc = "Reapers"
						}
					}
							
					random_list = {
						85 = {
							if = {
								limit = { ROOT = { trait = ill } }
								random_list = {
									10 = { ROOT = { add_trait = has_measles } }
									10 = { ROOT = { add_trait = has_typhus } }
									10 = { ROOT = { add_trait = has_tomb_rot } }
									10 = { ROOT = { add_trait = has_bone_auge } }
									10 = { ROOT = { add_trait = pneumonic } }
									}
								if = { #Notify liege and family
									limit = { independent = no }
									liege = { character_event = { id = lizardman.203 } }
									}
							}
							if = { limit = { NOT = { ROOT = { trait = ill } } }
								ROOT = { add_trait = ill }
								}
						}
						5 = {
							modifier = {
								factor = 2
								ROOT = { trait = ill }
								}
							modifier = {
								factor = 5
								OR = {
									ROOT = { trait = has_measles }
									ROOT = { trait = has_typhus }
									ROOT = { trait = has_tomb_rot }
									ROOT = { trait = has_bone_auge }
									ROOT = { trait = pneumonic }
									ROOT = { trait = leper }
									ROOT = { trait = syphilitic }
									ROOT = { trait = pneumonic }
									}
								}
							if = {
							 limit = {
							 is_invincible_trigger = yes
							 }

										antideath_effect = yes
										break = yes
							}
							death = { death_reason = death_trait }
							if = { #Notify liege and family
								limit = { ROOT = { is_ruler = no } }
								liege = { character_event = { id = lizardman.204 } }
								}
							}
						}

				}
				if = {
					limit = {
						has_dlc = "Reapers"
					}
					add_symptom_effect = yes
				}
	}
}

#203: liege notified of courtier getting sick due to jungle
character_event = {
	id = lizardman.203
	desc = lizardman203desc
	picture = "GFX_evt_lustria_jungle"

	notification = yes

	is_triggered_only = yes

	trigger = { always = yes }

	option = {
		name = OK
		}
}

#204: liege notified of courtier dying due to sickness from jungle
character_event = {
	id = lizardman.204
	desc = lizardman204desc
	picture = "GFX_evt_lustria_jungle"

	notification = yes

	is_triggered_only = yes

	trigger = { always = yes }

	option = {
		name = OK
		}
}
#205: Attacked by jungle beast
character_event = {
	id = lizardman.205
	desc = lizardman205desc
	picture = "GFX_evt_lustria_dinosaur"

	is_triggered_only = yes

	trigger = {
		location = { has_province_modifier = lustria_jungle }
	}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 0.25
			culture_group = lizardman_group
		}
		modifier = {
			factor = 1.5
			location = { has_province_modifier = lustria_medium_jungle }
		}
		modifier = {
			factor = 2
			location = { has_province_modifier = lustria_dense_jungle }
		}
		modifier = {
			factor = 3
			location = { has_province_modifier = lustria_oppressive_jungle }
		}
	}

	option = {
		name = OK
		create_random_soldier = {
			random_traits = no
			dynasty = none
			religion = old_ones
			culture = lizardman #GFX MUST be westerngfx for the correct static icon to appear
						#Creature gets native name #Creatures: Razorbacks, Cold Ones, Terradons, Stegadon, Sauropod, Thunder Lizards, Carnosaur
			name = " "
			female = no
			age = 30
			attributes = {
				martial = 5
				diplomacy = 0
				stewardship = 0
				learning = 0
				intrigue = 0
			}
		}
		#scope to character we created and make him send us a duel invite event - so we can't run away!
		new_character = {
			set_graphical_culture = generic_monster
			add_trait = creature_monster
			add_trait = wroth
			random_list = {
				10 = { give_nickname = nick_the_razorback change_martial = 5 }
				10 = { give_nickname = nick_the_cold_one change_martial = 6 }
				10 = { give_nickname = nick_the_terradon change_martial = 7 }
				10 = { give_nickname = nick_the_stegadon change_martial = 8 }
				10 = { give_nickname = nick_the_sauropod change_martial = 9 }
				10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
				10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
			}
			add_trait = brave
			character_event = {id = lizardman.207 days = 1}
		}
	}
}

#207: Creature challenges us to a duel

character_event = {
	id = lizardman.207
	desc = lizardman207desc
	picture = "GFX_evt_lustria_dinosaur"

	is_triggered_only = yes
	trigger = { 
		NOT = { has_character_flag = duel }
	}
	option = {
		save_event_target_as = duelist_a
		set_character_flag = duel
		name = OK
		FROM = {
			save_event_target_as = duelist_b
			character_event = {id = duelengine.1 days = 1 }
		}
		ROOT = {
			character_event = { id = lizardman.208 days = 30 } #Kill off the creature to avoid shenanigans.
		}
	}
}

#208: Kill creature, no matter the outcome of the duel

character_event = {
	id = lizardman.208
	desc = lizardman208desc
	picture = "GFX_evt_lustria_dinosaur"

	is_triggered_only = yes

	option = {
		name = OK
		ROOT = {
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
}
			death = { death_reason = death_battle }
		}
	}
}


#20X: Village disappears in jungle

#250: Manually add the modifier on startup because the game is stupid
province_event = {
	id = lizardman.250
	desc = lizardman250desc
	picture = "GFX_evt_lustria_jungle"

	hide_window = yes

	is_triggered_only = yes

	trigger = {
		region = world_new_world_lustria
	}

	option = {
		name = OK
		add_province_modifier = { name = lustria_jungle duration = -1 }
		if = {
			limit = {
				holder_scope = {
					any_demesne_province = {
						region = world_new_world_lustria
						NOT = { has_province_modifier = lustria_jungle }
					}
				}
			}
			holder_scope = {
				random_demesne_province = {
					limit = {
						region = world_new_world_lustria
						NOT = { has_province_modifier = lustria_jungle }
					}
					province_event = { id = lizardman.250 }
				}
			}
		}
		if = {
			limit = {
				NOT = {
					OR = {
						has_province_modifier = lustria_light_jungle
						has_province_modifier = lustria_medium_jungle
						has_province_modifier = lustria_dense_jungle
						has_province_modifier = lustria_oppressive_jungle
					}
				}
			}
			random_list = { #Make it so the initial jungle level is random
				25 = {
					modifier = {
						factor = 3 #Kingdom level tier is more likely to have light jungle
						is_capital = yes
						holder_scope = {
							higher_real_tier_than = DUKE
						}
					}
					modifier = {
						factor = 2 #Duke level is a bit more likely to have light jungle
						is_capital = yes
						holder_scope = {
							real_tier = DUKE
						}
					}
					modifier = {
						factor = 1.5
						is_capital = yes
						holder_scope = {
							real_tier = COUNT
						}
					}
					modifier = {
						factor = 3
						OR = {
							borders_major_river = yes
							port = yes
						}
					}
					add_province_modifier = { name = lustria_light_jungle duration = -1 }
				}
				25 = {
					add_province_modifier = { name = lustria_medium_jungle duration = -1 }
					modifier = {
						factor = 2
						OR = {
							borders_major_river = yes
							port = yes
						}
					}
				}
				25 = {
					add_province_modifier = { name = lustria_dense_jungle duration = -1 }
				}
				25 = {
					add_province_modifier = { name = lustria_oppressive_jungle duration = -1 }
					modifier = {
						factor = 0
						OR = {
							borders_major_river = yes
							port = yes
						}
					}
				}
			}
		}
	}
}

# 251: Trigger 250 for held provinces
character_event = {
	id = lizardman.251
	desc = lizardman251desc
	picture = "GFX_evt_lustria_jungle"

	hide_window = yes

	is_triggered_only = yes

	only_rulers = yes

	trigger = {
		is_ruler = yes
	}

	option = {
		name = OK
		ROOT = {
			random_demesne_province = {
				limit = { NOT = { has_province_modifier = lustria_jungle } }
				province_event = { id = lizardman.250 }
			}
		}
	}
}

#260: Clear recent cutback flag - OBSOLETE
#character_event = {
#	id = lizardman.260
#	picture = "GFX_evt_lustria_jungle"
#
##	hide_window = yes
#
#	is_triggered_only = yes
#
#	option = {
#		name = OK
#	}
#}

#261: Choose whom you want to cut back your jungle

character_event = {
	id = lizardman.261
	desc = lizardman261desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = { #Do it yourself
		name = lizardman261Adesc
		trigger = {
			ROOT = {
				in_command = no
					NOT = { trait = incapable }
					NOT = { trait = incapacitated }
					NOT = { trait = resting }
					NOT = { trait = studying_magic }
					NOT = { trait = in_hiding }
			}
		}
		if = {
			limit = { is_tribal = no }
			wealth = -25
		}
		if = {
			limit = { is_tribal = yes }
			wealth = -10
			prestige = -20
		}
		character_event = { id = lizardman.267 days = 20 random = 30 } # Result
	}

	option = { #Send the steward
		name = lizardman261Bdesc
		trigger = {
			ROOT = {
				job_treasurer = {
					character = yes
					in_command = no
					age = 16
					NOT = { trait = incapable }
					NOT = { trait = incapacitated }
					NOT = { trait = resting }
					NOT = { trait = studying_magic }
					NOT = { trait = in_hiding }
				}
			}
		}
		ROOT = {
			job_treasurer = {
				letter_event = { id = lizardman.262 }
			}
		}
		if = {
			limit = { is_tribal = no }
			wealth = -25
		}
		if = {
			limit = { is_tribal = yes }
			wealth = -10
			prestige = -20
		}
	}

	option = { #Nevermind
		name = lizardman261Cdesc
	}
}

#Steward - Charged to cut back the Jungle
letter_event = {
	id = lizardman.262
	desc = lizardman262desc


	is_triggered_only = yes

	hide_window = yes

	option = {
		name = OK
		character_event = { id = lizardman.266 days = 20 random = 30 } # Result
	}
}

#266: Event to resolve cutting back for the steward
character_event = {
	id = lizardman.266
	desc = lizardman266desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	hide_window = yes

	option = {
		name = OK
	hidden_tooltip = {
		random_list = {
			50 = {
				modifier = {
					factor = 1.1
					stewardship = 2
				}
				modifier = {
					factor = 1.1
					stewardship = 3
				}
				modifier = {
					factor = 1.1
					stewardship = 4
				}
				modifier = {
					factor = 1.1
					stewardship = 5
				}
				modifier = {
					factor = 1.1
					stewardship = 6
				}
				modifier = {
					factor = 1.1
					stewardship = 7
				}
				modifier = {
					factor = 1.1
					stewardship = 8
				}
				modifier = {
					factor = 1.1
					stewardship = 9
				}
				modifier = {
					factor = 1.1
					stewardship = 10
				}
				modifier = {
					factor = 1.1
					stewardship = 12
				}
				modifier = {
					factor = 1.1
					stewardship = 14
				}
				modifier = {
					factor = 1.1
					stewardship = 16
				}
				modifier = {
					factor = 1.1
					stewardship = 18
				}
				modifier = {
					factor = 1.1
					stewardship = 20
				}
				modifier = {
					factor = 1.1
					stewardship = 25
				}
				modifier = {
					factor = 1.1
					stewardship = 30
				}
				modifier = {
					factor = 1.5
					trait = creature_skink
				}
				modifier = {
					factor = 1.45
					trait = creature_amazon
				}
				modifier = {
					factor = 1.45
					culture_group = halfling_lustrian
				}
					if = {
						limit = { FROMFROMFROM = { location = { has_province_modifier = lustria_medium_jungle } } }
						FROMFROMFROM = { location = { remove_province_modifier = lustria_medium_jungle
							add_province_modifier = { name = lustria_light_jungle duration = -1 } } }
					}
					if = {
						limit = { FROMFROMFROM = { location = { has_province_modifier = lustria_dense_jungle } } }
						FROMFROMFROM = { location = { remove_province_modifier = lustria_dense_jungle
							add_province_modifier = { name = lustria_medium_jungle duration = -1 } } }
					}
					if = {
						limit = { FROMFROMFROM = { location = { has_province_modifier = lustria_oppressive_jungle } } }
						FROMFROMFROM = { location = { remove_province_modifier = lustria_oppressive_jungle
							add_province_modifier = { name = lustria_dense_jungle duration = -1 } } }
					}
				FROMFROM = {
					letter_event = { id = lizardman.268 }
				}
				ROOT = { character_event = { id = lizardman.270 } }
			}
			50 = {
				FROMFROM = {
					letter_event = { id = lizardman.269 }
				}
				ROOT = { character_event = { id = lizardman.271 } }
			}
		}
		random_list = {
			95 = { }
			5 = {
				modifier = {
					factor = 1.5
					FROMFROMFROM = { location = { has_province_modifier = lustria_medium_jungle } }
				}
				modifier = {
					factor = 2
					FROMFROMFROM = { location = { has_province_modifier = lustria_dense_jungle } }
				}
				modifier = {
					factor = 3
					FROMFROMFROM = { location = { has_province_modifier = lustria_oppressive_jungle } }
				}
				modifier = {
					factor = 0.9
					health = 2
				}
				modifier = {
					factor = 0.9
					health = 3
				}
				modifier = {
					factor = 0.9
					health = 4
				}
				modifier = {
					factor = 0.9
					health = 5
				}
				modifier = {
					factor = 0.9
					health = 6
				}
				modifier = {
					factor = 0.9
					health = 7
				}
				modifier = {
					factor = 0.9
					health = 8
				}
				modifier = {
					factor = 0.9
					health = 9
				}
				modifier = {
					factor = 0.9
					health = 10
				}
				modifier = {
					factor = 3
					ROOT = {
						trait = ill
					}
				}
				modifier = {
					factor = 5
					OR = {
						ROOT = { trait = has_measles }
						ROOT = { trait = has_typhus }
						ROOT = { trait = has_tomb_rot }
						ROOT = { trait = has_bone_auge }
						ROOT = { trait = pneumonic }
						ROOT = { trait = leper }
						ROOT = { trait = syphilitic }
						ROOT = { trait = pneumonic }
					}
				}
				modifier = {
					factor = 0.5
					ROOT = {
						OR = {
							trait = creature_skink
							trait = creature_saurus
						}
					}
				}
				modifier = {
					factor = 0.1
					ROOT = {
						trait = creature_slann
					}
				}

				if = {
					limit = {
						NOT = {
							ROOT = { trait = ill }
						}
					}
					ROOT = {
						add_trait = ill
					}
				}
				if = {
					limit = {
						ROOT = {
							trait = ill
						}
					}
					random_list = {
						10 = { ROOT = { add_trait = has_measles } }
						10 = { ROOT = { add_trait = has_typhus } }
						10 = { ROOT = { add_trait = has_tomb_rot } }
						10 = { ROOT = { add_trait = has_bone_auge } }
						10 = { ROOT = { add_trait = pneumonic } }
					}
					if = { #Notify liege and family
						limit = { independent = no }
						liege = { character_event = { id = lizardman.203 } }
						}
					}
				}
			}
		}
	}
}


#267: Event to resolve cutting back for the liege doing it himself
character_event = {
	id = lizardman.267
	desc = lizardman266desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = OK
	hidden_tooltip = {
		random_list = {
			50 = {
				modifier = {
					factor = 1.1
					ROOT = {
					stewardship = 2
					}
				}
				modifier = {
					factor = 1.1
					ROOT = {
					stewardship = 3
					}
				}
				modifier = {
					factor = 1.1
					ROOT = {
					stewardship = 4
					}
				}
				modifier = {
					factor = 1.1
					stewardship = 5
				}
				modifier = {
					factor = 1.1
					stewardship = 6
				}
				modifier = {
					factor = 1.1
					stewardship = 7
				}
				modifier = {
					factor = 1.1
					stewardship = 8
				}
				modifier = {
					factor = 1.1
					stewardship = 9
				}
				modifier = {
					factor = 1.1
					stewardship = 10
				}
				modifier = {
					factor = 1.1
					stewardship = 12
				}
				modifier = {
					factor = 1.1
					stewardship = 14
				}
				modifier = {
					factor = 1.1
					stewardship = 16
				}
				modifier = {
					factor = 1.1
					stewardship = 18
				}
				modifier = {
					factor = 1.1
					stewardship = 20
				}
				modifier = {
					factor = 1.1
					stewardship = 25
				}
				modifier = {
					factor = 1.1
					stewardship = 30
				}
				modifier = {
					factor = 1.5
					trait = creature_skink
				}
				modifier = {
					factor = 1.45
					trait = creature_amazon
				}
				modifier = {
					factor = 1.45
					culture_group = halfling_lustrian
				}
					if = {
						limit = { FROMFROM = { location = { has_province_modifier = lustria_medium_jungle } } }
						FROMFROM = { location = { remove_province_modifier = lustria_medium_jungle
							add_province_modifier = { name = lustria_light_jungle duration = -1 } } }
					}
					if = {
						limit = { FROMFROM = { location = { has_province_modifier = lustria_dense_jungle } } }
						FROMFROM = { location = { remove_province_modifier = lustria_dense_jungle
							add_province_modifier = { name = lustria_medium_jungle duration = -1 } } }
					}
					if = {
						limit = { FROMFROM = { location = { has_province_modifier = lustria_oppressive_jungle } } }
						FROMFROM = { location = { remove_province_modifier = lustria_oppressive_jungle
							add_province_modifier = { name = lustria_dense_jungle duration = -1 } } }
					}
				ROOT = { character_event = { id = lizardman.270 } }
			}
			50 = {
				ROOT = { character_event = { id = lizardman.271 } }
			}
		}
		random_list = {
			95 = { }
			5 = {
				modifier = {
					factor = 1.5
					FROMFROM = { location = { has_province_modifier = lustria_medium_jungle } }
				}
				modifier = {
					factor = 2
					FROMFROM = { location = { has_province_modifier = lustria_dense_jungle } }
				}
				modifier = {
					factor = 3
					FROMFROM = { location = { has_province_modifier = lustria_oppressive_jungle } }
				}
				modifier = {
					factor = 0.9
					health = 2
				}
				modifier = {
					factor = 0.9
					health = 3
				}
				modifier = {
					factor = 0.9
					health = 4
				}
				modifier = {
					factor = 0.9
					health = 5
				}
				modifier = {
					factor = 0.9
					health = 6
				}
				modifier = {
					factor = 0.9
					health = 7
				}
				modifier = {
					factor = 0.9
					health = 8
				}
				modifier = {
					factor = 0.9
					health = 9
				}
				modifier = {
					factor = 0.9
					health = 10
				}
				modifier = {
					factor = 3
					ROOT = {
						is_ill = yes
					}
				}
				modifier = {
					factor = 0.5
					ROOT = {
						OR = {
							trait = creature_skink
							trait = creature_saurus
						}
					}
				}
				modifier = {
					factor = 0.1
					ROOT = {
						trait = creature_slann
					}
				}
				character_event = { id = lizardman.273 }	# Illness due to cutting back the jungle
				}
			}
		}
	}
}

#268: Liege is notified of success
letter_event = {
	id = lizardman.268
	desc = lizardman268desc

	is_triggered_only = yes

	option = {
		name = OK
	}
}

#269: Liege is notified of failure
letter_event = {
	id = lizardman.269
	desc = lizardman269desc

	is_triggered_only = yes

	option = {
		name = OK
	}
}

#270: Character learns of his own success
character_event = {
	id = lizardman.270
	desc = lizardman270desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = OK
	}
}
#271: Character learns of his own failure
character_event = {
	id = lizardman.271
	desc = lizardman271desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = OK
	}
}

#272: Clear recent_cutback flag
#province_event = {
#	id = lizardman.272
#	desc = lizardman271desc
#	picture = "GFX_evt_lustria_jungle"
#
#	hide_window = yes
#
#	is_triggered_only = yes
#
#	immediate = {
#		clr_province_flag = recent_cutback_jungle
#	}
#
#	option = {
#		name = OK
#	}
#}

#273: Tell character he has become sick due to cutting back the jungle
character_event = {
	id = lizardman.273
	desc = lizardman273desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = OK
		
		if = {
			limit = {
				NOT = {
					has_dlc = "Reapers"
				}
			}
			random_list = {
				10 = { ROOT = { add_trait = has_measles } }
				10 = { ROOT = { add_trait = has_typhus } }
				10 = { ROOT = { add_trait = has_tomb_rot } }
				10 = { ROOT = { add_trait = has_bone_auge } }
				10 = { ROOT = { add_trait = pneumonic } }
			}
		}
		if = {
			limit = {
				has_dlc = "Reapers"
			}
			add_symptom_effect = yes
		}
		
		if = { #Notify liege
			limit = {
				independent = no
			}
			liege = {
				character_event = { id = lizardman.203 }
			}
		}
	}
}


#280: Spoils of the Lustrian jungle (lizardman only)
character_event = {
	id = lizardman.280

	hide_window = yes

	is_triggered_only = yes

	trigger = {
		culture = lizardman
		any_demesne_province = {
			has_province_modifier = lustria_jungle
			OR = {
				has_province_modifier = lustria_medium_jungle
				has_province_modifier = lustria_dense_jungle
				has_province_modifier = lustria_oppressive_jungle
			}
		}
	}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 1.5
			any_demesne_province = {
				has_province_modifier = lustria_dense_jungle
			}
		}
		modifier = {
			factor = 2
			any_demesne_province = {
				has_province_modifier = lustria_oppressive_jungle
			}
		}
		modifier = {
			factor = 1.5
			realm_stewardship = 30
		}
	}


	option = {
		name = OK
		random_list = {
			25 = { #Plaques found
				character_event = { id = lizardman.281 }
			}
			25 = { #Wild beasts tamed
				character_event = { id = lizardman.282 }
			}
			25 = { #Valuable resources found
				character_event = { id = lizardman.283 }
			}
		}
	}
}

#Holy plaques found
character_event = {
	id = lizardman.281
	desc = lizardman281desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = GodsBePraised
		piety = 250
	}
}

#Wild beasts tamed
character_event = {
	id = lizardman.282
	desc = lizardman282desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = GodsBePraised
	location = {
		ROOT = {
			spawn_unit = {
				owner = ROOT
				province = PREV
				home = ROOT
				troops = {
					light_cavalry = { 150 150 }
					}
				attrition = 1.0
				maintenance_multiplier = 0.075
				}
			}
		}
	}
}

#Valuable resources found
character_event = {
	id = lizardman.283
	desc = lizardman283desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = GodsBePraised
		wealth = 150
	}
}

#300: Events about rampaging beasts

# 300: Rampaging beasts rise up (temporary rebel title created, with a leader and a war)
# Triggered from "on_rebel_revolt"
province_event = {
	id = lizardman.300
	desc = lizardman300desc
	picture = "GFX_evt_lustria_dinosaur"
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		has_dlc = "The Old Gods"

		#has_province_modifier = lustria_jungle
		has_province_modifier = lustria_oppressive_jungle
		NOT = { # Not if there is already an ongoing dinosaur rampage for this province
			owner = {
				top_liege = {
					war = yes

					any_war = {
						defender = { character = PREV }
						using_cb = lustrian_rampage
						war_title = ROOT # The county
						}
					}
				}
			}
		# NOT = { # Not if there is already an ongoing revolt
			# owner = {
				# top_liege = {
					# war = yes
					# any_war = {
						# defender = { character = PREV }
						# OR = {
							# AND = {
								# using_cb = peasant_revolt
								# war_title = ROOT # The county
							# }
							# AND = {
								# using_cb = heretic_revolt
								# attacker = { religion = ROOT }
							# }
							# AND = {
								# using_cb = religious_revolt
								# attacker = { religion = ROOT }
							# }
						# }
					# }
				# }
			# }
		# }
	}

	immediate = {
		create_random_soldier = {
			random_traits = no
			dynasty = none
			religion = old_ones
			culture = lizardman #GFX MUST be westerngfx for the static portrait to show
						 #Creature gets native name #Creatures: Razorbacks, Cold Ones, Terradons, Stegadon, Sauropod, Thunder Lizards, Carnosaur
			female = no
			age = 30
			name = " "
			attributes = {
				martial = 5
				diplomacy = 0
				stewardship = 0
				learning = 0
				intrigue = 0
			}
		}
		new_character = {
			set_graphical_culture = generic_monster
			add_trait = creature_monster
			add_trait = wroth
			random_list = {
				10 = { give_nickname = nick_the_razorback change_martial = 5 }
				10 = { give_nickname = nick_the_cold_one change_martial = 6 }
				10 = { give_nickname = nick_the_terradon change_martial = 7 }
				10 = { give_nickname = nick_the_stegadon change_martial = 8 }
				10 = { give_nickname = nick_the_sauropod change_martial = 9 }
				10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
				10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
			}
			set_character_flag = rampage_revolter

			create_title = {
				tier = DUKE
				landless = yes
				temporary = yes
				rebel = yes
				culture = THIS
				name = "LUSTRIA_BEAST_RAMPAGE"
				holder = THIS
			}
			set_government_type = feudal_government
			random_list = {
				34 = {
					spawn_unit = {
						province = ROOT
						home = ROOT
						owner = THIS
						leader = THIS
						scaled_by_biggest_garrison = 0.8
						troops = {
							war_elephants = { 1 1 }
							light_cavalry = { 2 2 }
							light_infantry = { 3 3 }
						}
						attrition = 1.0
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 30
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								war_elephants = { 1 1 }
								light_cavalry = { 2 2 }
								light_infantry = { 7 7 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 23
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								war_elephants = { 1 1 }
								light_cavalry = { 2 2 }
								light_infantry = { 7 7 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
				}
				33 = {
					spawn_unit = {
						province = ROOT
						home = ROOT
						owner = THIS
						leader = THIS
						scaled_by_biggest_garrison = 0.8
						troops = {
							light_cavalry = { 1 1 }
							light_infantry = { 9 9 }
						}
						attrition = 1.0
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 30
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								light_cavalry = { 1 1 }
								light_infantry = { 9 9 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 23
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								war_elephants = { 1 1 }
								light_cavalry = { 1 1 }
								light_infantry = { 9 9 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
				}
				33 = {
					spawn_unit = {
						province = ROOT
						home = ROOT
						owner = THIS
						leader = THIS
						scaled_by_biggest_garrison = 0.8
						troops = {
								war_elephants = { 1 1 }
							light_infantry = { 10 10 }
						}
						attrition = 1.0
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 30
						trait = peasant_leader
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								light_infantry = { 10 10 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 23
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								light_infantry = { 8 8 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
				}
			}

			# DoW on the province top liege
			ROOT = {
				owner = {
					top_liege = {
						reverse_war = {
							target = PREVPREVPREV
							casus_belli = lustrian_rampage
							thirdparty_title = ROOT # The county
						}
					}
				}
			}
		}

		owner = {
			any_liege = { # Inform the lieges
				character_event = {
					id = lizardman.301
				}
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_1060
		trigger = {
			owner = { religion_group = ROOT }
		}
	}
	option = {
		name = EVTOPTB_TOG_1060
		trigger = {
			owner = { NOT = { religion_group = ROOT	} }
		}
	}
}

character_event = {
	id = lizardman.301
	desc = lizardman301desc
	picture = "GFX_evt_lustria_dinosaur"
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_1060
	}
}

# Religious Rebels seize a holding. Fired from 'on_siege_over_winner'. Owner of the winning unit is ROOT. The taken Holding title is in FROM.
character_event = {
	id = lizardman.302 #TOG.1065
	picture = "GFX_evt_lustria_dinosaur"

	hide_window = yes
	is_triggered_only = yes

	desc = OK

	trigger = {
		has_character_flag = rampage_revolter
		rebel = yes
	}

	option = {
		name = OK
		FROM = {
			if = {
				limit = {
					OR = {
						NOT = { location = { has_province_modifier = lustria_jungle } }
						location = { has_province_modifier = lustria_oppressive_jungle }
					}
				}
				destroy_random_building = yes
			}
			location = {
				if = {
					limit = {
						FROM = {
							is_capital = yes # The capital holding
						}
						has_province_modifier = lustria_jungle
						has_province_modifier = lustria_dense_jungle
					}
					add_province_modifier = {
						name = lustria_oppressive_jungle
						duration = -1
					}
					remove_province_modifier = lustria_dense_jungle
				}
				if = {
					limit = {
						FROM = {
							is_capital = yes # The capital holding
						}
						has_province_modifier = lustria_medium_jungle
						has_province_modifier = lustria_jungle
					}
					add_province_modifier = {
						name = lustria_dense_jungle
						duration = -1
					}
					remove_province_modifier = lustria_medium_jungle
				}
				if = {
					limit = {
						FROM = {
							is_capital = yes # The capital holding
						}
						has_province_modifier = lustria_light_jungle
						has_province_modifier = lustria_jungle
					}
					add_province_modifier = {
						name = lustria_medium_jungle
						duration = -1
					}
					remove_province_modifier = lustria_light_jungle
				}
				holder_scope = {
					character_event = { id = lizardman.303 }
				}
			}
		}
	}
}

character_event = {
	id = lizardman.303#TOG.1071
	desc = lizardman303desc
	picture = "GFX_evt_lustria_dinosaur"
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = "EVTOPTA_TOG_1070"
	}
}

# Rebels kill a local character. Fired from 'on_siege_over_loc_chars'.
# Siege winner unit owner in the 'new_character' scope, lost holding title in FROM, local character in ROOT.
character_event = {
	id = lizardman.304 #TOG.1190
	desc = lizardman304desc
	border = GFX_event_normal_frame_war
	picture ="GFX_evt_lustria_dinosaur"

	is_triggered_only = yes

	trigger = {
		new_character = {
			rebel = yes
			has_character_flag = rampage_revolter
		}
	}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 0.5
			is_female = yes
		}
		modifier = {
			factor = 0.5
			is_adult = no
		}
	}

	immediate = {
		any_liege = { # Inform the victim's lieges
			character_event = {
				id = lizardman.305
			}
		}
		new_character = {
			ROOT = {
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
}
				death = {
					death_reason = death_rabble
					killer = PREV
				}
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_1190
	}
}


# Lieges informed
character_event = {
	id = lizardman.305 #TOG.1191
	picture ="GFX_evt_lustria_dinosaur"
	desc = lizardman305desc
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	notification = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_1191
	}
}

#400-499: Events dealing with Chameleon Skinks and other holy war stuff

# 400: Return of the Chameleon Skinks
narrative_event = {
	id = lizardman.400
	title = "lizardman400title"
	desc = "lizardman400desc"
	picture = "GFX_evt_crusaders"
	border = "GFX_event_narrative_frame_religion"

	major = yes
	only_playable = yes
	only_men = yes

	trigger = {
		religion = old_ones

		is_heretic = no

		year = 2040
		NOT = { is_title_active = d_chameleon_skinks }
		1 = {
			check_variable = {
				which = "doom_counter" value = 60 #The winds of chaos are strong
			}
		}


	}

	mean_time_to_happen = {
		months = 4
	}

	immediate = {
		activate_title = { title = d_chameleon_skinks status = yes }
		create_random_soldier = {
			dynasty = none
			random_traits = yes
			religion = ROOT
			name = "Oxyotl"
		}
		new_character = {
			add_trait = creature_skink
			d_chameleon_skinks = {
				grant_title = PREV
			}
			set_defacto_liege = THIS
			wealth = 600
		}

		religion_authority = {
			modifier = religious_order_formed
			years = 10
		}
	}
	option = {
		name = "GodsBePraised"
		trigger = {
			religion = ROOT
		}
	}
	option = {
		name = "OK"
		trigger = { NOT = { religion = ROOT } }
	}
}
