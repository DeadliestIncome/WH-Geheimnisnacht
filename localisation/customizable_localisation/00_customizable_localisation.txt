#AVIALABLE CUSTOM LOCALISATION KEYS
#When adding new custom loc keys, add them to the appropriate category (or add a new one) and describe them. Name the strings "String_X" where x is its content.
# To not display anything, you can use 'localisation_key = ""'
# To have the first valid text be used, rather than a random valid text, use "use_first_valid = yes"

#RELATIONSHIPS
#GetRootRelation
#GetSisterBrother
#GetSeductressSeducer
#GetManWomanPreference		Gets man/woman depending on character's sexual preferences
#GetMenWomenPreference		gets men/women depending on character's sexual preferences
#GetRootRomanticWorry 		Stand-alone sentence for someone about to take initiative, like "What if this ruins our friendship?"
#GetRomanticObstacle 		More passive. Piece it into a sentence (lacks punctuation), for someone deciding whether to reciprocate or not, like "I am used to being alone".

#EDUCATION
#GetEducationSubject
#GetEducationRole
#GetEducationTool
#GetEducationalTopicPlural

#CHARACTER JOBS/TITLES
#GetActressActor
#GetAscetic
#GetQueenKing
#GetPrincessPrince
#GetBrideGroom
#GetMasterMistressCap

#CHARACTER "DESCRIPTIONS"
#GetVice
#GetFaceDescription
#GetComplimentNoun
#GetComplimentAdjective
#GetInsultNoun
#GetInsultAdjective
#GetDisease
#GetWesternZodiacSign		Gets the western astrological zodiac sign of character (based on birth date)
#GetCharacterLook 			Simple use, describing a character's immediate countenance/appearance
#GetAgeAdjective 			"The [GetAgeAdjective] [From.GetManWoman]" would read "the old man", for instance

#SOCIETIES
#GetDWReasonToJoin
#GetDWDevil
#GetDWDarkMagic
#GetDWDemon
#GetDWDemons
#GetDWMagician
#GetDWExpression
#GetMission
#GetMOGod
#GetMOSaint
#GetMOBuilding
#GetMOCode
#GetMOGreeting
#GetMOFarewell
#GetSRGreeting
#GetSRFarewell
#GetSRTrinketSymbol
#GetHermesThriceBlessed
#GetHermeticsRank
#GetHermeticDebateSubject
#GetSillyDebateSubject

#RELIGION
#GetHouseOfWorship 			Gets name for house of worship of character's religion (character)
#GetReligiousRite 			Gets name for a common religious rite (character)
#GetReligionWarrior
#GetReligionWarriorPlural
#GetReligiousPerson
#GetTrueReligionGroupPersons
#GetTrueReligionAdjective
#GetTrueReligionAdherent
#SecretReligion.GetScriptureName
#TrueReligion.GetHighGodName
#GetTrueReligionPerson
#GetArtifactSource			Gets name for bodypart artifact's source (saint, holy man, hero)
#GetArtifactSourceCap
#GetReligionAdherent

#PLACES
#GetCapitalHolding			Gets an appropriate noun describing a character's capital holding (character)
#GetHolding 				Gets an appropriate noun to describe a holding (holding)
#GetChamberOpening 			Gets door/tent opening for capital holding (character)
#GetChamber 				Gets chamber/tent for capital holding (character)
#GetReligionTempleName
#GetGroundDesc				Requires a province scope. Gets "snow" (if winter), otherwise "mud" or "dirt".
#GetTerrain 				Requires a province scope. Gets "forest","hills" etc)
# GetInOn 					Requires a province scope. Supplements GetTerrain.
# GetThroughOver			Requires a province scope. Supplements GetTerrain. "We must travel [through] the [mountains]!"

#WEATHER, TIME
#GetWeatherAdjective 			Checks Capital scope.
#GetLocalWeatherAdjective		Requires a province scope. 
#GetTemperature					Checks Capital scope.
#GetLocalTemperature 			Requires a province scope. 
#GetSeason #WIP

#CHINA
#GetLongChineseEmperorName
#GetMediumChineseEmperorName
#GetShortChineseEmperorName
#GetCouncillorLetterGreeting
#GetRulerLetterGreeting
#GetGovernorLetterGreeting
#GetChineseLetterBlessing
#GetChineseComplimentAdjective
#GetChineseOffmapTributaryPrestigeCost
#GetChineseForceOpenDemand
#GetChineseForceOpenDemandChina

#MISC
#GetMatterOfImportance
#GetRandomMythologicalCreature 				Fetches the name of a cool mythological creature/beast, e.g. as Fenris, or simpler versions like Dragon
#GetDogName  								Fetches the name of your pet hunting dog, if you have the appropriate flag. Fallback is "Sweet-pea". :p




###RELATIONSHIPS###
defined_text = {
	name = GetEstablishColony

	text = {
		localisation_key = GetBretonColony
		trigger = { culture_group = bretonnian_group }
	}
	fallback_text = {
		localisation_key = GetEstablishColonyGeneral #fallback, in case it fails to find relevant info
	}
}

defined_text = {
	name = GetRootColonyArea

	text = {
		localisation_key = GetColonyAraby
		trigger = { has_character_flag = colonies_araby_flag }
	}
	text = {
		localisation_key = GetColonyNewworld
		trigger = { has_character_flag = colonies_araby_flag }
	}
	text = {
		localisation_key = GetColonyLoren
		trigger = { has_character_flag = colonies_loren_flag }
	}
	text = {
		localisation_key = GetColonyNehekhara
		trigger = { has_character_flag = colonies_nehekhara_flag }
	}
	text = {
		localisation_key = GetColonyOldworld
		trigger = { has_character_flag = colonies_oldworld_flag }
	}
	text = {
		localisation_key = GetColonyUlthuan
		trigger = { has_character_flag = colonies_ulthuan_flag }
	}
	text = {
		localisation_key = GetColonyNorsca
		trigger = { has_character_flag = colonies_norsca_flag }
	}
	text = {
		localisation_key = GetColonyBadlands
		trigger = { has_character_flag = colonies_badlands_flag }
	}
	text = {
		localisation_key = GetColonyDarklands
		trigger = { has_character_flag = colonies_darklands_flag }
	}
	text = {
		localisation_key = GetColonyKarazankor
		trigger = { has_character_flag = colonies_karazankor_flag }
	}
	text = {
		localisation_key = GetColonyDrakankor
		trigger = { has_character_flag = colonies_drakankor_flag }
	}
	text = {
		localisation_key = GetColonyMourn
		trigger = { has_character_flag = colonies_mourn_flag }
	}
	text = {
		localisation_key = GetColonyUnderempire
		trigger = { has_character_flag = colonies_underempire_flag }
	}
	fallback_text = {
		localisation_key = String_root_relation_fallback #fallback, in case it fails to find relevant info
	}
}
