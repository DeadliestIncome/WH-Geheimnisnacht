##############################
decisions = {
    claim_the_throne = {
		is_high_prio = yes
		only_playable = yes
		ai_check_interval = 36 #No Rush
		potential = {
			age = 16
			culture_group = imperial_group
			higher_tier_than = DUKE
			NOT = { has_character_flag = claimed_empire }
			NOT = { has_global_flag = united_empire }
			e_the_empire = { has_holder = no }
			NOR = {
				trait = witch_hunter
				trait = vampire_carstein_visible
				trait = vampire_blood_visible
				trait = vampire_lahmian_visible
				trait = vampire_strigoi_visible
				trait = vampire_necrarch_visible
				trait = vampire_jade_visible
				trait = vampire_mahtmasi_visible #Vampire Emperor Crisis in event of emperor is hidden vampire, search Roman restoration in vanilla
				religion_group = chaos_gods_group
			}
		}

		allow = {
			age = 16
			NOT = { government = congregation_government }
			#custom_tooltip = {
			#	text = IS_IMPERIAL_HERO
			#	has_character_flag = imperial_hero
			#}
			culture_group = imperial_group
			higher_tier_than = DUKE
			AND = {
				prestige = 8000
				piety = 8000
				diplomacy = 18
			}
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
		}

		effect = {
			hidden_tooltip = {
				ROOT = {
					remove_trait = crowned_by_priest
					remove_trait = crowned_by_bishop
					remove_trait = crowned_by_pope
					remove_trait = crowned_by_myself
					remove_trait = crowned_by_priest_rd
					remove_trait = crowned_by_bishop_rd
					remove_trait = crowned_by_pope_rd
					remove_character_modifier = crowned_in_barn
					remove_character_modifier = extravagant_coronation
					character_event = { id = unification.0 }
					character_event = { id = EVTweaponry.3 }
					#character_event = { id = DR_imperial.1 }
				}
			}
		}

		ai_will_do = {
			factor = 1
		}
	}
    renounce_imperial_throne = {
      only_playable = yes
      ai = no
      is_high_prio = yes
      potential = {
        any_liege = {
          tier = EMPEROR
        }
        NOT = {
          has_character_modifier = renounced_imperial_throne
        }
      }
      allow = {
        any_heir_title = {
          tier = EMPEROR
        }
      }
      effect = {
        add_character_modifier = {
          name = renounced_imperial_throne
          duration = -1
        }
      }
    }
    distribute_runefangs = {
		only_independent = yes
		ai_check_interval = 6
	    potential = {
	        tier = EMPEROR
		    calc_true_if = {
		        amount = 2
			    has_artifact = goblin_bane
			    has_artifact = legbiter
			    has_artifact = crow_feeder
			    has_artifact = brain_wounder
			    has_artifact = mothers_ruin
			    has_artifact = dragon_tooth
			    has_artifact = orc_hewer
			    has_artifact = stone_breaker
			    has_artifact = blood_bringer
			    has_artifact = troll_cleaver
		    }
		}

		allow = {
		}

		effect = {
			    if = {
        	    		limit = {
        	       			NOT = { has_landed_title = k_reikland }
				   	        has_artifact = dragon_tooth
        	    		}
            			unsafe_destroy_artifact = dragon_tooth
            		    	any_vassal = {
                                limit = { has_landed_title = k_reikland }
                                NOT = { has_artifact = dragon_tooth }
                                add_artifact = dragon_tooth
			    	        }
        		        }
			    if = {
            			limit = {
                            NOT = { has_landed_title = k_averland }
                            has_artifact = mothers_ruin
            			}
            			unsafe_destroy_artifact = mothers_ruin
            			any_vassal = {
                            limit = { has_landed_title = k_averland }
                            NOT = { has_artifact = mothers_ruin }
                            add_artifact = mothers_ruin
                        }
                }
			    if = {
            			limit = {
               				NOT = { has_landed_title = k_hochland }
				   	has_artifact = goblin_bane
            			}
            			unsafe_destroy_artifact = goblin_bane
            			any_vassal = {
			        	limit = { has_landed_title = k_hochland }
					NOT = { has_artifact = goblin_bane }
					add_artifact = goblin_bane
			    	}
        		    }
			    if = {
            			limit = {
               				NOT = { has_landed_title = k_middenland }
				  	has_artifact = legbiter
            			}
            			unsafe_destroy_artifact = legbiter
            			any_vassal = {
				        limit = { has_landed_title = k_middenland }
					NOT = { has_artifact = legbiter }
					add_artifact = legbiter
				}
        		    }
			    if = {
            			limit = {
               				NOT = { has_landed_title = k_nordland }
				   	has_artifact = crow_feeder
            			}
            			unsafe_destroy_artifact = crow_feeder
            			any_vassal = {
			        	limit = { has_landed_title = k_nordland }
					NOT = { has_artifact = crow_feeder }
					add_artifact = crow_feeder
			    	}
        		    }
			    if = {
            			limit = {
               				NOT = { has_landed_title = k_ostland }
				   	has_artifact = brain_wounder
            			}
            			unsafe_destroy_artifact = brain_wounder
            			any_vassal = {
			        	limit = { has_landed_title = k_ostland }
					NOT = { has_artifact = brain_wounder }
					add_artifact = brain_wounder
			    	}
        		    }
			    if = {
        	    		limit = {
        	       			NOT = { has_landed_title = k_ostermark }
				   	has_artifact = troll_cleaver
        	    		}
        	    		unsafe_destroy_artifact = troll_cleaver
        	    		any_vassal = {
			        	limit = { has_landed_title = k_ostermark }
					NOT = { has_artifact = troll_cleaver }
					add_artifact = troll_cleaver
			    	}
		            }
			    if = {
        	    		limit = {
        	       			NOT = { has_landed_title = k_stirland }
				   	has_artifact = orc_hewer
        	    		}
        	    		unsafe_destroy_artifact = orc_hewer
        	    		any_vassal = {
			        	limit = { has_landed_title = k_stirland }
					NOT = { has_artifact = orc_hewer }
					add_artifact = orc_hewer
			   	}
        		    }
			    if = {
        	    		limit = {
        	       			NOT = { has_landed_title = k_talabecland }
				   	has_artifact = stone_breaker
        	    	    	}
        	    		unsafe_destroy_artifact = stone_breaker
        	    		any_vassal = {
			        	limit = { has_landed_title = k_talabecland }
					NOT = { has_artifact = stone_breaker }
					add_artifact = stone_breaker
			    	}
        		    }
			    if = {
        	    		limit = {
        	       			NOT = { has_landed_title = k_wissenland }
				   	has_artifact = blood_bringer
        	    		}
        	    		unsafe_destroy_artifact = blood_bringer
       		     		any_vassal = {
			        	limit = { has_landed_title = k_wissenland }
					NOT = { has_artifact = blood_bringer }
					add_artifact = blood_bringer
			    }
        		}
		}

		ai_will_do = {
			factor = 1
		}
    }
	de_jure_realm_drakwald = {
		is_high_prio = yes
		only_playable = yes

		potential = {
			culture = drakwalder
			NOT = { has_global_flag = de_jure_realm_drakwald_formed }
		}

		allow = {
			completely_controls = d_carroburg
			calc_true_if = {
				amount = 2
				completely_controls = d_laurelorn
				completely_controls = d_mirror_moor
				completely_controls = d_kristal
				completely_controls = d_drakwald
				completely_controls = d_schadenmarsch
			}
			prestige = 2000
		}

		effect = {
			custom_tooltip = {
				text = DE_JURE_REALM_DRAKWALD_CT
				narrative_event = { id = ee.1 }
				any_player = {
					limit = { NOT = {character=ROOT }}
					narrative_event = { id = ee.2 days = 7 }
				}
			}
		}
	}
	de_jure_realm_solland = {
		is_high_prio = yes
		only_playable = yes

		potential = {
			culture = sollander
			NOT = { has_global_flag = de_jure_realm_solland_formed }
		}

		allow = {
			completely_controls = d_soell
			completely_controls = d_pfeildorf
			completely_controls = d_sudenland
			prestige = 2000
		}

		effect = {
			custom_tooltip = {
				text = DE_JURE_REALM_SOLLAND_CT
				narrative_event = { id = ee.3 }
				any_player = {
					limit = { NOT = {character=ROOT }}
					narrative_event = { id = ee.4 days = 7 }
				}
			}
		}
	}
    hire_engineer_human = {
		only_rulers = yes
		potential = {
			always = no
			ai = no
			OR = {
				is_patrician = yes
				AND = {
					higher_tier_than = BARON
					demesne_size = 1
				}
			}
			trait = creature_human
			NOT = { religion_group = necromantic_group }
			OR = {
				culture_group = imperial_group
				culture_group = tilean_group
				culture_group = bretonnian_group
				culture_group = estalian_group
				culture_group = kislevite_group
			}
			NOR = {
				religion = grail
				religion = false_grail
			}
			NOT = {
				any_courtier = {
					trait = engineer
					prisoner = no
				}
			}
			NOT = {	has_character_flag = hiring_engineer }
		}

		allow = {
			scaled_wealth = 0.2
		}

		effect = {
			scaled_wealth = -0.2
			letter_event = { id = DR_universities.132 days = 10 }
			set_character_flag = hiring_engineer
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1
		}
	}
	put_engineer_to_work = {
		only_rulers = yes
		potential = {
			always = no
			is_ruler = yes
			ai = no
			capital_scope = {
				NOR = {
					has_province_modifier = engineer_working_artillery
					has_province_modifier = engineer_working_steam_tank
				}
				owner = { character = ROOT }
			}
			any_courtier = {
					trait = engineer
					prisoner = no
			}
			NOT = { has_character_flag = flag_ordering_engineer }
		}
		allow = {
			wealth = 100
		}
		effect = {
			set_character_flag = flag_ordering_engineer
			character_event = { id = DR_universities.133 }
		}
		ai_will_do = {
			factor = 1
		}
	}
}

targetted_decisions = {
    send_son_to_university = {
		filter = dynasty
		ai_target_filter = dynasty
		ai_check_interval = 6
		only_rulers = yes
		from_potential = {
			is_ruler = yes
			NOT = { trait = witch_hunter }
			NOR = {
				religion = grail
				religion = false_grail
			}
			trait = creature_human
			OR = {
				religion_group = old_world_group
				religion_group = ormazd_gods_group
			}
			OR = {
				location = { region = world_old_world }
				location = { region = world_greater_araby }
			}
			NOT = { is_tribal = yes }
			NOT = { is_nomadic = yes }
			prisoner = no
			NOT = {
				trait = incapable
			}
		}
		potential = {
			age = 16
			is_landed = no
			in_command = no
			prisoner = no
			is_incapacitated_trigger = no
			OR = {
				father = {
					character = FROM
				}
				mother = {
					character = FROM
				}
			}
			NOR = {
				has_character_flag = wants_educ_university
				trait = academic
				trait = arabyan_scholar
				# has_character_flag = wants_eng_university
				# trait = engineer
			}
			OR = { is_female = no
				FROM = { NOR = { religion = ormazd
						religion = kitabid } } }
			NOT = { trait = witch_hunter }
			NOR = {
				religion = grail
				religion = false_grail
			}
			trait = creature_human
			OR = {
				religion_group = old_world_group
				religion_group = ormazd_gods_group
			}
		}
		allow = {
			host = {
				character = FROM
			}
			OR = {
				father = {
					character = FROM
				}
				mother = {
					character = FROM
				}
			}
		}
		effect = {
			hidden_tooltip = {
				character_event = { id = DR_universities.31 }
				if = {
					limit = { FROM = {is_female = yes } }
					set_character_flag = mother_return_university
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
			# modifier = {
				# factor = 0.005 # Slow it down
			# }
		}
	}
	vassalize_new_elector = {
		ai = no  # "ai_target_filter = all" is expensive, so ai instead uses MTTH event ElectiveLeagues.40
        from_potential = {
            league_potential_trigger = yes
        }

        potential = {
            NOT = { character = FROM }
            league_potential_trigger = yes
        }

        allow = {
            FROM = {
                primary_title = {
                    has_law = succ_feudal_elective
                    is_titular = yes
                }

                # Sorry for the indent, players, but it gets the scopes correct for sharing scripted triggers
                ROOT = {
                    custom_tooltip = {
                        text = LOWER_RANK_THAN_US
                        lower_real_tier_than = PREV
                    }

                    THIS_can_be_elector_of_PREV_trigger = yes
                    THIS_can_join_PREV_league_trigger = yes
                    THIS_and_FROM_are_adjacent_trigger = yes

                    NOT = { has_opinion_modifier = { who = FROM  modifier = opinion_granted_independence } }
                }
            }
        }

        effect = {
            add_THIS_to_FROM_existing_league_effect = yes
        }
    }
}
